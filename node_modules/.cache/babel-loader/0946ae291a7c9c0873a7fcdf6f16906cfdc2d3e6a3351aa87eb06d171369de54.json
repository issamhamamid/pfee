{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fractal\\\\Desktop\\\\PFE\\\\pfe\\\\src\\\\components\\\\UserTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Table, Tag, Space } from 'antd';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { DeleteUser, getAllUsers } from \"../API/UserApiService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserTable = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [message, setmessage] = useState(null);\n  useEffect(() => refreshUsers());\n  function refreshUsers() {\n    getAllUsers().then(response => {\n      setUsers(response.data);\n    }).catch(error => console.log(error));\n  }\n  function DeleteUsers(id) {\n    DeleteUser(id).then(response => {\n      refreshUsers();\n      setmessage(\"Delete Succesful\");\n    }).catch(error => console.log(error));\n  }\n  const handleUpdateUser = id => {\n    // Add code to handle updating user\n  };\n  const columns = [{\n    title: \"ID\",\n    dataIndex: 'id',\n    key: 'id'\n  }, {\n    title: \"Nom d'utilisateur\",\n    dataIndex: 'username',\n    key: 'username'\n  }, {\n    title: 'Nom',\n    dataIndex: 'nom',\n    key: 'name'\n  }, {\n    title: 'Prenom',\n    dataIndex: 'prenom',\n    key: 'prenom'\n  }, {\n    title: 'Numero de telephone',\n    dataIndex: 'number',\n    key: 'number'\n  }, {\n    title: 'Mot de passe',\n    dataIndex: 'password',\n    key: 'password'\n  }, {\n    title: 'Action',\n    key: 'action',\n    render: (text, record) => /*#__PURE__*/_jsxDEV(Space, {\n      size: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => UpdateUser(record.id),\n        children: /*#__PURE__*/_jsxDEV(EditOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => DeleteUsers(record.id),\n        children: /*#__PURE__*/_jsxDEV(DeleteOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 63\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    dataSource: users\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n_s(UserTable, \"S7sTFcjV+S5w6NqER9lXq7ucifs=\");\n_c = UserTable;\nexport default UserTable;\nvar _c;\n$RefreshReg$(_c, \"UserTable\");","map":{"version":3,"names":["React","useEffect","useState","Table","Tag","Space","DeleteOutlined","EditOutlined","DeleteUser","getAllUsers","jsxDEV","_jsxDEV","UserTable","_s","users","setUsers","message","setmessage","refreshUsers","then","response","data","catch","error","console","log","DeleteUsers","id","handleUpdateUser","columns","title","dataIndex","key","render","text","record","size","children","onClick","UpdateUser","fileName","_jsxFileName","lineNumber","columnNumber","dataSource","_c","$RefreshReg$"],"sources":["C:/Users/fractal/Desktop/PFE/pfe/src/components/UserTable.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport { Table, Tag, Space } from 'antd';\r\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\nimport {DeleteUser, getAllUsers} from \"../API/UserApiService\";\r\n\r\nconst UserTable = () => {\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const [message, setmessage] = useState(null);\r\n\r\n\r\n    useEffect(()=> refreshUsers())\r\n   function refreshUsers(){\r\n       getAllUsers()\r\n           .then(response => {\r\n               setUsers(response.data)\r\n           })\r\n           .catch(error => console.log(error))\r\n   }\r\n\r\n    function DeleteUsers(id){\r\n        DeleteUser(id)\r\n            .then(response => {\r\n\r\n             refreshUsers()\r\n                setmessage(\"Delete Succesful\")\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n\r\n\r\n    const handleUpdateUser = (id) => {\r\n        // Add code to handle updating user\r\n    }\r\n\r\n    const columns = [\r\n\r\n        {\r\n            title: \"ID\",\r\n            dataIndex: 'id',\r\n            key: 'id',\r\n        },\r\n        {\r\n            title: \"Nom d'utilisateur\",\r\n            dataIndex: 'username',\r\n            key: 'username',\r\n        },\r\n        {\r\n            title: 'Nom',\r\n            dataIndex: 'nom',\r\n            key: 'name',\r\n        },\r\n\r\n        {\r\n            title: 'Prenom',\r\n            dataIndex: 'prenom',\r\n            key: 'prenom',\r\n        },\r\n        {\r\n            title: 'Numero de telephone',\r\n            dataIndex: 'number',\r\n            key: 'number',\r\n        },\r\n\r\n\r\n        {\r\n            title: 'Mot de passe',\r\n            dataIndex: 'password',\r\n            key: 'password',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (text, record) => (\r\n                <Space size=\"middle\">\r\n                    <a onClick={() => UpdateUser(record.id)}><EditOutlined /></a>\r\n                    <a onClick={() => DeleteUsers(record.id)}><DeleteOutlined /></a>\r\n                </Space>\r\n            ),\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Table columns={columns} dataSource={users} />\r\n    );\r\n}\r\n\r\nexport default UserTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}